/*
 * This file was generated by the Gradle 'init' task.
 *
 * This is a general purpose Gradle build.
 * Learn more about Gradle by exploring our samples at https://docs.gradle.org/7.5.1/samples
 */
buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
        classpath "io.spring.gradle:dependency-management-plugin:$springDependencyManagementPluginVersion"
        classpath "com.avast.gradle:gradle-docker-compose-plugin:$dockerComposePluginVersion"
        classpath "org.springframework.cloud:spring-cloud-contract-gradle-plugin:$springCloudContractDependenciesVersion"
    }
}
apply plugin: 'docker-compose'
apply plugin: "org.springframework.boot"

subprojects {

    apply plugin: "java"
    sourceCompatibility = 17
    targetCompatibility =17

    // TODO apply plugin: 'pmd'

    group = "net.chrisrichardson.ftgo"

    repositories {
        eventuateMavenRepoUrl.split('[ ,]').each { repoUrl -> maven { url repoUrl.trim() } }

        mavenCentral()
        jcenter()

        maven {
            url 'https://jitpack.io'
        }

        maven {
            url "${project.rootDir}/build/repo"
        }

    }
//    dependencies {
//
//        implementation(platform("io.eventuate.platform:eventuate-platform-dependencies:$eventuatePlatformVersion"))
//        constraints {
//            compile ("io.netty:netty-codec-http2") {
//                version {
//                    strictly("4.1.72.Final")
//                }
//            }
//        }
//
//
//    }
}
//    subprojects.each {
//        if (it.name.endsWith("-service") || it.name.endsWith("-gateway")) {
//            composeBuild.dependsOn(":" + it.name + ":assemble")
//            composeUp.dependsOn(":" + it.name + ":assemble")
//        }
//    }